import glob

#Define a builder that creates backups
#BackupBuild = Builder(action = 'perl MakeBackup.pl')

env = Environment()
debug = ARGUMENTS.get('debug', 0 )
if int(debug):
	env.Append(CCFLAGS = '-g')
else:
	env.Append(CCFLAGS = '-O2' )

#env.Append( BUILDERS = {'backup' : BackupBuild } )
conf = Configure(env)
env = conf.Finish()

src = Split("""
	src/Anomaly.cpp
	src/Block.cpp
	src/Bookmark.cpp
	src/Character.cpp
	src/CreationFuncs-impl.cpp
	src/Expression.cpp
	src/HelperFuncs.cpp
	src/Interface.cpp
	src/Interpreter.cpp
	src/LanguageConstants.cpp
	src/List.cpp
	src/Operator.cpp
	src/ParserAnomaly.cpp
	src/ReaderSource.cpp
	src/ReaderSourceFile.cpp
	src/ReaderSourceString.cpp
	src/Scope.cpp
	src/ScopeObject.cpp
	src/ScopeObjectVisitor.cpp
	src/Slib-Common.cpp
	src/Slib-List.cpp
	src/Slib-Math.cpp
	src/Slib-Time.cpp
	src/SpecialVars.cpp
	src/Unicode.cpp
	src/Variable.cpp
	src/VersionInfo.cpp
	src/Word.cpp
	""")

#Main library
SSI = env.SharedLibrary( 'SSI', src, CPPPATH = 'include', LIBS=['gmp', 'mpfr'])
BinCopy = env.Install( './bin', SSI )
env.Alias( 'MainBuild', [SSI, BinCopy] )

#Install
env.Install('/usr/lib', SSI)
env.Install('/usr/include/SSI', glob.glob('include/*.hpp') + glob.glob('include/*.h') )

il = env.Alias( 'install-lib', '/usr/lib' )
ih = env.Alias( 'install-headers', '/usr/include/SSI' )
env.Alias( 'install', [il, ih] )

#Backup
#env.backup( '' )


Default('MainBuild')

