HIGH PRECEDENCE:
-Move all declaration code to Expression.
-Add code to expression that allows an expression to just use a slice
	from another epxression rather than copying the slice to a new buffer.
-(DONE!) Recursion
-Interpret everything and then read from that buffer.  This would allow optimizations to be made




-Long term: Ability to compile and interpret bytecode.
-(DONE!) User defined functions that take no arguments (i.e. that are treated like variables.
-(DONE!)Better system for sending block info to interface to be said.  Such as actually sending the block object.
-(DONE!) Ability to output exceptions in GCC format so they may be understood by SciTE.
-(DONE!) A print function.
-Long Term: A regular expression/pattern matching system.  Probalby utilzing boost's regex lib.
-(DONE!) A default entry point
-(DONE!) Quite mode (no banner, no Press any key stuff).
-(DONE!) Move all expression parsing code to a seperate class.  (i.e. A new Exception class that
		contains all the parsing functions.)
-(DONE!) Revise SSDoc regarding the syntax changes (default entrypoint, "name-of" operator, etc
-A pi functions and variable.
-(DONE!) Handling for backslash character codes.
-A default precision variable.
-(DONE!) Proper dumping of expressions to strings.
-(DONE!) Update the SciTE lexer.
-(DONE!)Look into replacing the vector object lists with maps. (this would give a very large speed increase)
