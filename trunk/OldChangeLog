
/*
Version 5 Objectives:
-Implement else, elseif (or "else if")  -- DONE!
-Implement break
-Finalize any syntax related to if/while/else/elseif


*/

/*
This header lists serves to define a few version related variable, and
hold the changelog and todo list.

CHANGELOG:
-------------------------------------
Mon, Sep 12 23:16
After not working for a while, I finally got around to replacing
ScriptFile with something much for efficient.  The result is greater
increased performance on loops, recursion, and well, almost everything.

Mon, Aug 29 23:52
Cleaned up a lot of code:
Moved some members of Interpreter to private.
Added NullInterface.
Interpreter now handles importing code rather than Expression.
Got rid of the embarassing hacks that made import work.

Wed, Aug 24 --:-- (I'm not listing times becuase I'm in windows and the clock isn't set right)
Squashed a big bug (a design bug this time) in the file importing system.

Tue, Aug 23 --:--
After a mean bit of hacking, recursion should be working now.  And I bumped
the build num to Chernobyl-7.

Tue, Aug 17 16:18
Fixed a bug that stopped file importing from working correctly.

Fri, Aug 12 12:01
Quick fix to the PickOne function.  It is not properly distributed
rather than just moded.

Thu, Aug 04 22:56
Today and yesterday I made a bunch of new list functions including:
push, pop, remove, removeall, sort
They are all in the SSList module that gets imported by default.

Yesterday I also fixed up whatever I was doing below.  The comma operator
no longer makes unecessary multideminisional lists.  It was just silly
before.


Tue, Aug 02 15:29
I'm switching over the SCons system instead of using makefiles.
From now on, we can just call 'scons' and 'scons install'.

Later that day...
I'm doing some hardcore changes to the language, so I want to document this.
First off, when a scalar gets interpreted as a list, the list it creates does
not copy the scalar onto it.  Now it copies a pointer to the scalar.

Also "in" holds a pointers to the arguments allowing you to actually modify
arguments.

The Operate function takes a list that has the potential to be
multideminsional.

Thu, Jul 14 21:04
I have been working on this, I just haven't bothered doing anything in the
changelog.  Tonight I rewrote all my unicode stuff, got rid of the "DCJ"
namespace, and it now cleanly compiles with wide character support.
Sweet.



--------------------------------------
Fri, June 3 23:18
Major clean-up.  I got rid of just about all the string comparison crap and replaced
it all with enumerations and string constants.  So I can just set a few variable and completely
change the language.  This also may give a slight performance increase due to there being
far less overhead of comparing and copying strings.

I also improved my auto-backup script.  The time stamp is now better formated (in such a way that
the files get sorted correctly), and you can now choose between 7zip, bzip2, or gzip.

--------------------------------------
Sun, May 29 16:16
I'm now using mpfr instead of mpf for all mathematical operations.  This will allow
me to use some of the more complex operations.  I had to make several modification
the gmp supplied c++ wrapepr to get it to work.  I also had to build to newer version
rather than the one that comes with gmp.

Implemented the exponent function: **.  Tested and seems to work ok.

--------------------------------------
Thu, May 26 13:27
Fixed a few bugs in the custom operator system.

Did in overall cleanup of my ParseExpresssion code.  Broke syntax checking into
a seperate function.  Made better Anomaly reports for Expressions.

Implemented short-circuting with || and && operators.

--------------------------------------
Wed, May 25	15:56
Implemented the first version of the custom operator system.
My trivial "AddTwo" operator works like a charm.

--------------------------------------
Tue May 24 14:43:57 2005
Identifiers that don't exist will no longer be treated as strings.

--------------------------------------
Sat, May 7   11:56
Removed BlockRefs.  Replaced them with a simple string containing the full
name of the block.  This may be a little slower, but it makes things a hell
of a lot easier for me and the user.

And I'm going to bump the version up to 4.  I seem to have fulfilled my objective
of a fully functioning list system.

--------------------------------------
Fri, May 6   22:09
The expression system is now more robust.  You can now do something like:
("a", "b", "c"):length, and actually have it work.  ':' is now implemented
as an operator, but this doesn't replace the old system, it just complements
it for special cases such as the one mentioned.

--------------------------------------
Thu, May 5   23:31
As depressing as it is, it has come time to cut loose old Mr. BigNum.
I turned to the dark side an have replaced BigNum with the GNU MP library.
It was pain to get a working win32 build, but now that everything is sorted
The expression system is now more robust.  You can now do something like:
("a", "b", "c"):length, and actually have it work.  ':' is now implemented
as an operator, but this doesn't replace the old system, it just complements
it for special cases such as the one mentioned.

--------------------------------------
Thu, May 5   23:31
As depressing as it is, it has come time to cut loose old Mr. BigNum.
I turned to the dark side an have replaced BigNum with the GNU MP library.
It was pain to get a working win32 build, but now that everything is sorted
out, this makes things much simpler and faster.

--------------------------------------
Thu, Apr 28   11:19
Swapped out my old BigNum for the upgraded one that uses std::vector
and is nearly twice as fast. (i.e. all BigNum computations are now much
faster)

Completely rewrote the list system.  Instead of different types of
lists, there is now just one that hold anything.  This has not yet
been fully tested though.

--------------------------------------
Tue, Apr 12   12:35
I rewrote the Anomaly class.  Its much better now.

The import system has been working for some time, but I guess I forgot to put
it in the changelog before.

--------------------------------------
Sat, Apr 2   18:55
Phase one of the import system is complete.  Now for the (hopefully) simple
part.  After this I'm going to bump up the the version number.

--------------------------------------
Thu, Mar 31   10:48
Major restructuring.  Broke all the file i/o code out of Interpreter and moved
it into a new class called ScriptFile.  Interpreter was starting to become
a monolith.

You can now resize lists by assigning to the member called "length".
I've done some other stuff before now but I just don't remember what.


--------------------------------------
Sun, Mar 20   21:39
I added the framework to add "special variables", and went right ahead
and added one: "time".  That will return the (you guessed it) the current
local time.  

PS: Added "elapsed_seconds" also.

------------------------------------
Sat, Mar 19  12:58
BigNum has been updated to take advantage of 64bit processors.
Its runs damn fast now. Two ~70 digit numbers multiplied in
like 1.5 seconds.


-------------------------------------
Tue, Mar 16  1:19
WHEW!  After some hard work SSI has been officially ported
to linux!  Everything seems to be working just fine now.
With the scitemod working too, I have my full development
enviroment on both my OS's now.

I really don't know much about makefiles, but after some
expiramenting I managed to write ones that work, so I'm
not messing with it any more.

I also realized just how much more pedantic gcc is than
msvcpp.  If I have to hear it whine about no newlines at
the end of files one more time, I think I may just test
the rm command on its ass.

Completely unrelated, but I have two days to write a ten page
paper for my senior project.  Instead of starting on that tonight
I decided to finish the port.  On my way home from school I
started to get severly depressed.  I felt that I needed to work
on this to maintain my physchological stability.  I'm ok now.


--------------------------------------
Sat, Mar 5   1:52
Fixed the stupid bug where it was unable to read files made in linux.
	

--------------------------------------
Mon, Feb 21   22:01
A lot of little bugfixes and stuff.  I did get unary operators working, which is
	very cool.  (Though the only one I have is !/not.)  I got the or/and aliases working.
	I added a != operators.  I'm not even sure everything I've done today.  Its one
	of those dazed lonely nights where I can't seem to concentrate on anything.
	A good night to get some writing done.

--------------------------------------
Sun, Feb 20   20:39
Implemented the 'end' block.  Set nextline=end and the conversation will end
	efficient way to go from BigNum's to floats.

Added a Bookmark class to replace the system of saving
	the line and position separately.  This is in anticipation of controls
	statements.
	

--------------------------------------
Fri, Feb 18   19:49
Suck it down!  Comma operator works like a charm.
	PS.  For VarList's now too.

Fixed the bug where Interpreter::mCurrentLine gets off when it jumps blocks.

No more "using namespace DCJ" in headers.  This way SSI can be used alongside
	windows.h without conflicting with its CHAR.

ConsoleInterface will now output in color thanks to a handy little
	library I found.

Player choice system is working.  This calls for celebration!
	This will no be known as SSI-2

--------------------------------------
Sat, Feb 12   16:58
BlockList is up and running!

I sliced up VarList into a template class called ListBase and VarList itself.
	This is because BlockList's implementation was going to be nearly identical
	to VarList's.  This saves some work.

Lost track of where I'm at.  VarList seems to be working fine.  I changed it so
	if it tries to access an index that doesn't exist, it just springs into
	existence.

--------------------------------------
Sun, Feb 6   19:50
Separated Variable's interface into another class.  And updated everything else
	necessary.  This was a huge pain in the ass.  Especially with that damn bird
	screaming.

Put in a little code for declaring varlists.

--------------------------------------
Sat, Feb 5   20:25
Fixed Interpreter::GetScopeObject

Removed RegistererVisitor in favor of GetScopePtr.

Added Get[X]Ptr functions in ScopeObject.  This is meant
	to replace the annoying ConvertToVariableVisitor, and
	ConvertToBlockVisitor.  If you see them being used, replace them.

--------------------------------------
Fri, Feb 4   23:01
Finished optimizing BigNum multiplication algorithm along
	with parts of QuickListSolid.

Moved Block and Character and the Visitors into their own files.


--------------------------------------
Sun, Jan 30   20:37
I have completed the first "version" of the interpreter.  I'm dubbing it SSI-1



TODO:
-else
-elseif
-Ability to mark variable as constant.

*/


