diff -urN scite167/scintilla/gtk/makefile scite167_mod/scintilla/gtk/makefile
--- scite167/scintilla/gtk/makefile	2006-01-06 23:38:34.000000000 -0800
+++ scite167_mod/scintilla/gtk/makefile	2006-01-06 23:12:20.000000000 -0800
@@ -63,14 +63,14 @@
 #++Autogenerated -- run src/LexGen.py to regenerate
 #**LEXOBJS=\\\n\(\*.o \)
 LEXOBJS=\
-LexAda.o LexAPDL.o LexAsm.o LexAsn1.o LexAU3.o LexAVE.o LexBaan.o LexBash.o \
-LexBasic.o LexBullant.o LexCaml.o LexCLW.o LexConf.o LexCPP.o LexCrontab.o \
-LexCsound.o LexCSS.o LexEiffel.o LexErlang.o LexEScript.o LexFlagship.o \
-LexForth.o LexFortran.o LexGui4Cli.o LexHaskell.o LexHTML.o LexKix.o LexLisp.o \
-LexLout.o LexLua.o LexMatlab.o LexMetapost.o LexMMIXAL.o LexMPT.o LexMSSQL.o \
-LexNsis.o LexOthers.o LexPascal.o LexPB.o LexPerl.o LexPOV.o LexPS.o \
-LexPython.o LexRebol.o LexRuby.o LexScriptol.o LexSmalltalk.o LexSpecman.o \
-LexSQL.o LexTADS3.o LexTeX.o LexVB.o LexVerilog.o LexVHDL.o LexYAML.o
+LexAVE.o LexLua.o LexEScript.o LexAU3.o LexTeX.o LexYAML.o LexCaml.o LexCPP.o \
+LexLout.o LexAsm.o LexBasic.o LexNsis.o LexVerilog.o LexTADS3.o LexKix.o \
+LexPerl.o LexCLW.o LexConf.o LexSmalltalk.o LexBash.o LexMatlab.o LexHaskell.o \
+LexAsn1.o LexAda.o LexForth.o LexMMIXAL.o LexOthers.o LexCSS.o LexCsound.o \
+LexGui4Cli.o LexBaan.o LexSQL.o LexMetapost.o LexPB.o LexScriptol.o LexVHDL.o \
+LexRebol.o LexFlagship.o LexRuby.o LexPascal.o LexPython.o LexEiffel.o \
+LexMPT.o LexSpecman.o LexLisp.o LexVB.o LexFortran.o LexPS.o LexBullant.o \
+LexCrontab.o LexHTML.o LexMSSQL.o LexErlang.o LexAPDL.o LexPOV.o LexSS.o
 #--Autogenerated -- end of automatically generated section
 
 all: $(COMPLIB)
diff -urN scite167/scintilla/gtk/scintilla.mak scite167_mod/scintilla/gtk/scintilla.mak
--- scite167/scintilla/gtk/scintilla.mak	2006-01-06 23:38:34.000000000 -0800
+++ scite167_mod/scintilla/gtk/scintilla.mak	2006-01-06 23:12:20.000000000 -0800
@@ -139,61 +139,62 @@
 #++Autogenerated -- run src/LexGen.py to regenerate
 #**LEXOBJS=\\\n\(\t$(DIR_O)\\\*.obj \\\n\)
 LEXOBJS=\
-	$(DIR_O)\LexAda.obj \
-	$(DIR_O)\LexAPDL.obj \
-	$(DIR_O)\LexAsm.obj \
-	$(DIR_O)\LexAsn1.obj \
-	$(DIR_O)\LexAU3.obj \
 	$(DIR_O)\LexAVE.obj \
-	$(DIR_O)\LexBaan.obj \
-	$(DIR_O)\LexBash.obj \
-	$(DIR_O)\LexBasic.obj \
-	$(DIR_O)\LexBullant.obj \
+	$(DIR_O)\LexLua.obj \
+	$(DIR_O)\LexEScript.obj \
+	$(DIR_O)\LexAU3.obj \
+	$(DIR_O)\LexTeX.obj \
+	$(DIR_O)\LexYAML.obj \
 	$(DIR_O)\LexCaml.obj \
-	$(DIR_O)\LexCLW.obj \
-	$(DIR_O)\LexConf.obj \
 	$(DIR_O)\LexCPP.obj \
-	$(DIR_O)\LexCrontab.obj \
-	$(DIR_O)\LexCsound.obj \
-	$(DIR_O)\LexCSS.obj \
-	$(DIR_O)\LexEiffel.obj \
-	$(DIR_O)\LexErlang.obj \
-	$(DIR_O)\LexEScript.obj \
-	$(DIR_O)\LexFlagship.obj \
-	$(DIR_O)\LexForth.obj \
-	$(DIR_O)\LexFortran.obj \
-	$(DIR_O)\LexGui4Cli.obj \
-	$(DIR_O)\LexHaskell.obj \
-	$(DIR_O)\LexHTML.obj \
-	$(DIR_O)\LexKix.obj \
-	$(DIR_O)\LexLisp.obj \
 	$(DIR_O)\LexLout.obj \
-	$(DIR_O)\LexLua.obj \
+	$(DIR_O)\LexAsm.obj \
+	$(DIR_O)\LexBasic.obj \
+	$(DIR_O)\LexNsis.obj \
+	$(DIR_O)\LexVerilog.obj \
+	$(DIR_O)\LexTADS3.obj \
+	$(DIR_O)\LexKix.obj \
+	$(DIR_O)\LexPerl.obj \
+	$(DIR_O)\LexCLW.obj \
+	$(DIR_O)\LexConf.obj \
+	$(DIR_O)\LexSmalltalk.obj \
+	$(DIR_O)\LexBash.obj \
 	$(DIR_O)\LexMatlab.obj \
-	$(DIR_O)\LexMetapost.obj \
+	$(DIR_O)\LexHaskell.obj \
+	$(DIR_O)\LexAsn1.obj \
+	$(DIR_O)\LexAda.obj \
+	$(DIR_O)\LexForth.obj \
 	$(DIR_O)\LexMMIXAL.obj \
-	$(DIR_O)\LexMPT.obj \
-	$(DIR_O)\LexMSSQL.obj \
-	$(DIR_O)\LexNsis.obj \
 	$(DIR_O)\LexOthers.obj \
-	$(DIR_O)\LexPascal.obj \
+	$(DIR_O)\LexCSS.obj \
+	$(DIR_O)\LexCsound.obj \
+	$(DIR_O)\LexGui4Cli.obj \
+	$(DIR_O)\LexBaan.obj \
+	$(DIR_O)\LexSQL.obj \
+	$(DIR_O)\LexMetapost.obj \
 	$(DIR_O)\LexPB.obj \
-	$(DIR_O)\LexPerl.obj \
-	$(DIR_O)\LexPOV.obj \
-	$(DIR_O)\LexPS.obj \
-	$(DIR_O)\LexPython.obj \
+	$(DIR_O)\LexScriptol.obj \
+	$(DIR_O)\LexVHDL.obj \
 	$(DIR_O)\LexRebol.obj \
+	$(DIR_O)\LexFlagship.obj \
 	$(DIR_O)\LexRuby.obj \
-	$(DIR_O)\LexScriptol.obj \
-	$(DIR_O)\LexSmalltalk.obj \
+	$(DIR_O)\LexPascal.obj \
+	$(DIR_O)\LexPython.obj \
+	$(DIR_O)\LexEiffel.obj \
+	$(DIR_O)\LexMPT.obj \
 	$(DIR_O)\LexSpecman.obj \
-	$(DIR_O)\LexSQL.obj \
-	$(DIR_O)\LexTADS3.obj \
-	$(DIR_O)\LexTeX.obj \
+	$(DIR_O)\LexLisp.obj \
 	$(DIR_O)\LexVB.obj \
-	$(DIR_O)\LexVerilog.obj \
-	$(DIR_O)\LexVHDL.obj \
-	$(DIR_O)\LexYAML.obj \
+	$(DIR_O)\LexFortran.obj \
+	$(DIR_O)\LexPS.obj \
+	$(DIR_O)\LexBullant.obj \
+	$(DIR_O)\LexCrontab.obj \
+	$(DIR_O)\LexHTML.obj \
+	$(DIR_O)\LexMSSQL.obj \
+	$(DIR_O)\LexErlang.obj \
+	$(DIR_O)\LexAPDL.obj \
+	$(DIR_O)\LexPOV.obj \
+	$(DIR_O)\LexSS.obj \
 
 #--Autogenerated -- end of automatically generated section
 
@@ -310,115 +311,117 @@
 #++Autogenerated -- run src/LexGen.py to regenerate
 #**\n\($(DIR_O)\\\*.obj: ..\\src\\\*.cxx $(LEX_HEADERS)\n\n\)
 
-$(DIR_O)\LexAda.obj: ..\src\LexAda.cxx $(LEX_HEADERS)
-
-$(DIR_O)\LexAPDL.obj: ..\src\LexAPDL.cxx $(LEX_HEADERS)
+$(DIR_O)\LexAVE.obj: ..\src\LexAVE.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexAsm.obj: ..\src\LexAsm.cxx $(LEX_HEADERS)
+$(DIR_O)\LexLua.obj: ..\src\LexLua.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexAsn1.obj: ..\src\LexAsn1.cxx $(LEX_HEADERS)
+$(DIR_O)\LexEScript.obj: ..\src\LexEScript.cxx $(LEX_HEADERS)
 
 $(DIR_O)\LexAU3.obj: ..\src\LexAU3.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexAVE.obj: ..\src\LexAVE.cxx $(LEX_HEADERS)
+$(DIR_O)\LexTeX.obj: ..\src\LexTeX.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexBaan.obj: ..\src\LexBaan.cxx $(LEX_HEADERS)
+$(DIR_O)\LexYAML.obj: ..\src\LexYAML.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexBash.obj: ..\src\LexBash.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCaml.obj: ..\src\LexCaml.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexBasic.obj: ..\src\LexBasic.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCPP.obj: ..\src\LexCPP.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexBullant.obj: ..\src\LexBullant.cxx $(LEX_HEADERS)
+$(DIR_O)\LexLout.obj: ..\src\LexLout.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCaml.obj: ..\src\LexCaml.cxx $(LEX_HEADERS)
+$(DIR_O)\LexAsm.obj: ..\src\LexAsm.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCLW.obj: ..\src\LexCLW.cxx $(LEX_HEADERS)
+$(DIR_O)\LexBasic.obj: ..\src\LexBasic.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexConf.obj: ..\src\LexConf.cxx $(LEX_HEADERS)
+$(DIR_O)\LexNsis.obj: ..\src\LexNsis.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCPP.obj: ..\src\LexCPP.cxx $(LEX_HEADERS)
+$(DIR_O)\LexVerilog.obj: ..\src\LexVerilog.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCrontab.obj: ..\src\LexCrontab.cxx $(LEX_HEADERS)
+$(DIR_O)\LexTADS3.obj: ..\src\LexTADS3.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCsound.obj: ..\src\LexCsound.cxx $(LEX_HEADERS)
+$(DIR_O)\LexKix.obj: ..\src\LexKix.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCSS.obj: ..\src\LexCSS.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPerl.obj: ..\src\LexPerl.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexEiffel.obj: ..\src\LexEiffel.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCLW.obj: ..\src\LexCLW.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexErlang.obj: ..\src\LexErlang.cxx $(LEX_HEADERS)
+$(DIR_O)\LexConf.obj: ..\src\LexConf.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexEScript.obj: ..\src\LexEScript.cxx $(LEX_HEADERS)
+$(DIR_O)\LexSmalltalk.obj: ..\src\LexSmalltalk.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexFlagship.obj: ..\src\LexFlagship.cxx $(LEX_HEADERS)
+$(DIR_O)\LexBash.obj: ..\src\LexBash.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexForth.obj: ..\src\LexForth.cxx $(LEX_HEADERS)
+$(DIR_O)\LexMatlab.obj: ..\src\LexMatlab.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexFortran.obj: ..\src\LexFortran.cxx $(LEX_HEADERS)
+$(DIR_O)\LexHaskell.obj: ..\src\LexHaskell.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexGui4Cli.obj: ..\src\LexGui4Cli.cxx $(LEX_HEADERS)
+$(DIR_O)\LexAsn1.obj: ..\src\LexAsn1.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexHaskell.obj: ..\src\LexHaskell.cxx $(LEX_HEADERS)
+$(DIR_O)\LexAda.obj: ..\src\LexAda.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexHTML.obj: ..\src\LexHTML.cxx $(LEX_HEADERS)
+$(DIR_O)\LexForth.obj: ..\src\LexForth.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexKix.obj: ..\src\LexKix.cxx $(LEX_HEADERS)
+$(DIR_O)\LexMMIXAL.obj: ..\src\LexMMIXAL.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexLisp.obj: ..\src\LexLisp.cxx $(LEX_HEADERS)
+$(DIR_O)\LexOthers.obj: ..\src\LexOthers.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexLout.obj: ..\src\LexLout.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCSS.obj: ..\src\LexCSS.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexLua.obj: ..\src\LexLua.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCsound.obj: ..\src\LexCsound.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexMatlab.obj: ..\src\LexMatlab.cxx $(LEX_HEADERS)
+$(DIR_O)\LexGui4Cli.obj: ..\src\LexGui4Cli.cxx $(LEX_HEADERS)
+
+$(DIR_O)\LexBaan.obj: ..\src\LexBaan.cxx $(LEX_HEADERS)
+
+$(DIR_O)\LexSQL.obj: ..\src\LexSQL.cxx $(LEX_HEADERS)
 
 $(DIR_O)\LexMetapost.obj: ..\src\LexMetapost.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexMMIXAL.obj: ..\src\LexMMIXAL.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPB.obj: ..\src\LexPB.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexMPT.obj: ..\src\LexMPT.cxx $(LEX_HEADERS)
+$(DIR_O)\LexScriptol.obj: ..\src\LexScriptol.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexMSSQL.obj: ..\src\LexMSSQL.cxx $(LEX_HEADERS)
+$(DIR_O)\LexVHDL.obj: ..\src\LexVHDL.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexNsis.obj: ..\src\LexNsis.cxx $(LEX_HEADERS)
+$(DIR_O)\LexRebol.obj: ..\src\LexRebol.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexOthers.obj: ..\src\LexOthers.cxx $(LEX_HEADERS)
+$(DIR_O)\LexFlagship.obj: ..\src\LexFlagship.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPascal.obj: ..\src\LexPascal.cxx $(LEX_HEADERS)
+$(DIR_O)\LexRuby.obj: ..\src\LexRuby.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPB.obj: ..\src\LexPB.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPascal.obj: ..\src\LexPascal.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPerl.obj: ..\src\LexPerl.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPython.obj: ..\src\LexPython.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPOV.obj: ..\src\LexPOV.cxx $(LEX_HEADERS)
+$(DIR_O)\LexEiffel.obj: ..\src\LexEiffel.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPS.obj: ..\src\LexPS.cxx $(LEX_HEADERS)
+$(DIR_O)\LexMPT.obj: ..\src\LexMPT.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPython.obj: ..\src\LexPython.cxx $(LEX_HEADERS)
+$(DIR_O)\LexSpecman.obj: ..\src\LexSpecman.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexRebol.obj: ..\src\LexRebol.cxx $(LEX_HEADERS)
+$(DIR_O)\LexLisp.obj: ..\src\LexLisp.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexRuby.obj: ..\src\LexRuby.cxx $(LEX_HEADERS)
+$(DIR_O)\LexVB.obj: ..\src\LexVB.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexScriptol.obj: ..\src\LexScriptol.cxx $(LEX_HEADERS)
+$(DIR_O)\LexFortran.obj: ..\src\LexFortran.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexSmalltalk.obj: ..\src\LexSmalltalk.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPS.obj: ..\src\LexPS.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexSpecman.obj: ..\src\LexSpecman.cxx $(LEX_HEADERS)
+$(DIR_O)\LexBullant.obj: ..\src\LexBullant.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexSQL.obj: ..\src\LexSQL.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCrontab.obj: ..\src\LexCrontab.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexTADS3.obj: ..\src\LexTADS3.cxx $(LEX_HEADERS)
+$(DIR_O)\LexHTML.obj: ..\src\LexHTML.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexTeX.obj: ..\src\LexTeX.cxx $(LEX_HEADERS)
+$(DIR_O)\LexMSSQL.obj: ..\src\LexMSSQL.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexVB.obj: ..\src\LexVB.cxx $(LEX_HEADERS)
+$(DIR_O)\LexErlang.obj: ..\src\LexErlang.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexVerilog.obj: ..\src\LexVerilog.cxx $(LEX_HEADERS)
+$(DIR_O)\LexAPDL.obj: ..\src\LexAPDL.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexVHDL.obj: ..\src\LexVHDL.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPOV.obj: ..\src\LexPOV.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexYAML.obj: ..\src\LexYAML.cxx $(LEX_HEADERS)
+$(DIR_O)\LexSS.obj: ..\src\LexSS.cxx $(LEX_HEADERS)
 
 
 #--Autogenerated -- end of automatically generated section
Files scite167/scintilla/include/Face.pyc and scite167_mod/scintilla/include/Face.pyc differ
diff -urN scite167/scintilla/include/SciLexer.h scite167_mod/scintilla/include/SciLexer.h
--- scite167/scintilla/include/SciLexer.h	2006-01-06 23:38:34.000000000 -0800
+++ scite167_mod/scintilla/include/SciLexer.h	2006-01-06 23:41:08.000000000 -0800
@@ -88,6 +88,7 @@
 #define SCLEX_FLAGSHIP 73
 #define SCLEX_CSOUND 74
 #define SCLEX_FREEBASIC 75
+#define SCLEX_SS 76
 #define SCLEX_AUTOMATIC 1000
 #define SCE_P_DEFAULT 0
 #define SCE_P_COMMENTLINE 1
@@ -1008,6 +1009,20 @@
 #define SCE_CSOUND_IRATE_VAR 13
 #define SCE_CSOUND_GLOBAL_VAR 14
 #define SCE_CSOUND_STRINGEOL 15
+#define SCE_SS_DEFAULT 0
+#define SCE_SS_STRING 1
+#define SCE_SS_NUMBER 2
+#define SCE_SS_KEYWORD 3
+#define SCE_SS_CONTROL 4
+#define SCE_SS_CHARCOMMENT 5
+#define SCE_SS_UTILITYCOMMENT 6
+#define SCE_SS_SCENECOMMENT 7
+#define SCE_SS_CHARBLOCKCOMMENT 8
+#define SCE_SS_SCENEBLOCKCOMMENT 9
+#define SCE_SS_UTILITYBLOCKCOMMENT 10
+#define SCE_SS_HEADER 11
+#define SCE_SS_OUTSTRING 12
+#define SCE_SS_DOCSTRING 13
 #define SCLEX_ASP 29
 #define SCLEX_PHP 30
 //--Autogenerated -- end of section automatically generated from Scintilla.iface
diff -urN scite167/scintilla/include/Scintilla.iface scite167_mod/scintilla/include/Scintilla.iface
--- scite167/scintilla/include/Scintilla.iface	2006-01-06 23:38:34.000000000 -0800
+++ scite167_mod/scintilla/include/Scintilla.iface	2006-01-06 23:41:02.000000000 -0800
@@ -1819,6 +1819,7 @@
 val SCLEX_FLAGSHIP=73
 val SCLEX_CSOUND=74
 val SCLEX_FREEBASIC=75
+val SCLEX_SS=76
 
 # When a lexer specifies its language as SCLEX_AUTOMATIC it receives a
 # value assigned in sequence from SCLEX_AUTOMATIC+1.
@@ -2877,6 +2878,22 @@
 val SCE_CSOUND_IRATE_VAR=13
 val SCE_CSOUND_GLOBAL_VAR=14
 val SCE_CSOUND_STRINGEOL=15
+# Lexical states for SCLEX_SS
+lex SS=SCLEX_SS SCE_SS_
+val SCE_SS_DEFAULT=0
+val SCE_SS_STRING=1
+val SCE_SS_NUMBER=2
+val SCE_SS_KEYWORD=3
+val SCE_SS_CONTROL=4
+val SCE_SS_CHARCOMMENT=5
+val SCE_SS_UTILITYCOMMENT=6
+val SCE_SS_SCENECOMMENT=7
+val SCE_SS_CHARBLOCKCOMMENT=8
+val SCE_SS_SCENEBLOCKCOMMENT=9
+val SCE_SS_UTILITYBLOCKCOMMENT=10
+val SCE_SS_HEADER=11
+val SCE_SS_OUTSTRING=12
+val SCE_SS_DOCSTRING=13
 
 # Events
 
diff -urN scite167/scintilla/src/KeyWords.cxx scite167_mod/scintilla/src/KeyWords.cxx
--- scite167/scintilla/src/KeyWords.cxx	2006-01-06 23:38:34.000000000 -0800
+++ scite167_mod/scintilla/src/KeyWords.cxx	2006-01-06 23:12:20.000000000 -0800
@@ -202,6 +202,7 @@
 	LINK_LEXER(lmSmalltalk);
 	LINK_LEXER(lmSpecman);
 	LINK_LEXER(lmSQL);
+	LINK_LEXER(lmSS);
 	LINK_LEXER(lmTADS3);
 	LINK_LEXER(lmTCL);
 	LINK_LEXER(lmTeX);
diff -urN scite167/scintilla/src/LexSS.cxx scite167_mod/scintilla/src/LexSS.cxx
--- scite167/scintilla/src/LexSS.cxx	1969-12-31 16:00:00.000000000 -0800
+++ scite167_mod/scintilla/src/LexSS.cxx	2006-01-06 16:47:46.000000000 -0800
@@ -0,0 +1,317 @@
+/*
+Lexer for the S^2 Language.
+
+Written by: Daniel Jones 
+Send Questions or comments to: DanielCJones@gmail.com
+
+Legal:
+Do whatever you want with this, but don't hold me responsible.
+This code is pretty insignificant, so as far as I'm concerned,
+its public domain.
+
+This is an extension to Scintilla which is
+Copyright 1998-2003 by Neil Hodgson <neilh@scintilla.org>
+
+Changes
+2005-10-21:
+Fixed it up so header work correctly.
+
+2005-05-20:
+I did a total rewrite of the lexer.  Along with clearing up any minor issues,
+I also included support for coloring block headers differently.  This should
+help readbility quite a bit.
+*/
+
+
+#include <stdlib.h>
+#include <string.h>
+#include <ctype.h>
+#include <stdio.h>
+#include <stdarg.h>
+
+#include "Platform.h"
+
+#include "PropSet.h"
+#include "Accessor.h"
+#include "StyleContext.h"
+#include "KeyWords.h"
+#include "Scintilla.h"
+#include "SciLexer.h"
+
+#include <string>
+
+
+inline bool IsIdChar( char ch ){
+    if( isalpha( ch ) || isdigit( ch ) ||
+        ch == '_' ) return true;
+    else return false;
+}
+
+
+
+static void ColouriseSSDoc( unsigned int startPos, int length,
+						   int initStyle,
+						   WordList* keywordlists[],
+						   Accessor &styler )
+{
+    StyleContext sc( startPos, length, initStyle, styler );
+	
+	WordList& Keywords = *keywordlists[0];
+	WordList& ControlWords = *keywordlists[1];
+
+	std::string KeywordBuffer;
+	
+	//This is kind of a confusing name.
+	//It gets set to true when the line preceding a { is not a 
+	//block title.
+	bool NotAHeader = false;
+   
+	for( ; sc.More(); sc.Forward() )
+	{
+		switch(sc.state)
+		{
+		case SCE_SS_DEFAULT:
+            
+            //PHASE I
+            if( isalpha( sc.ch ) || sc.ch == '_' )
+            {
+                KeywordBuffer.push_back(sc.ch);
+                
+                if( !IsIdChar(sc.chNext) )
+                {
+                    if( Keywords.InList( KeywordBuffer.c_str() ) )
+                    {
+                        //Special Hack: This is only _simple_ way I can
+                        //figure out how to get headers and keywords working.
+                        //Headers with keywords in them will not work:
+                        styler.ColourTo( sc.currentPos -
+                                         KeywordBuffer.length(),
+                                         SCE_SS_DEFAULT );
+                        
+                        sc.ChangeState( SCE_SS_KEYWORD );
+                        sc.ForwardSetState( SCE_SS_DEFAULT );
+                        KeywordBuffer.clear();
+						NotAHeader = true;
+                        //break;
+                    }
+                    else if( ControlWords.InList( KeywordBuffer.c_str() ) )
+                    {
+                    		styler.ColourTo( sc.currentPos -
+                                         KeywordBuffer.length(),
+                                         SCE_SS_DEFAULT );
+                        
+                        sc.ChangeState( SCE_SS_CONTROL );
+                        sc.ForwardSetState( SCE_SS_DEFAULT );
+                        KeywordBuffer.clear();
+						NotAHeader = true;
+                    }                    
+                    else KeywordBuffer.clear();   
+                }
+            }
+            else if( isdigit(sc.ch) )
+            {
+                if( !KeywordBuffer.empty() ){
+                    KeywordBuffer.push_back(sc.ch);
+                }
+                else{                    
+                    //Color anything after a number as a number.
+                    //Synatically it has to be either a number or
+                    //bad syntax.
+                    sc.SetState( SCE_SS_NUMBER );
+					while( IsIdChar( sc.ch ) || sc.ch == '.' ){
+                        sc.Forward();
+                    }
+                        
+                    sc.SetState( SCE_SS_DEFAULT );
+                }
+            }
+            else KeywordBuffer.clear();
+            
+            
+            //PHASE II
+            if( sc.chNext == '{' ){
+				if( NotAHeader ){
+					NotAHeader = false;
+				}
+				else{
+					sc.ChangeState( SCE_SS_HEADER );
+					sc.ForwardSetState( SCE_SS_DEFAULT );
+				}
+            }
+            else if( //sc.ch == '\n' ||
+                     //sc.ch == '\r' ||
+	             sc.ch == '_' ||
+                     sc.ch == ':' ||
+                     IsASpaceOrTab( sc.ch ) ||
+                     isalpha( sc.ch ) ||
+                     isdigit( sc.ch ) )
+            {
+                continue;
+            }
+            //Strings
+            else if( sc.ch == '\"' ){
+                sc.SetState( SCE_SS_STRING );
+            }
+			//Out-Strings
+			else if( sc.ch == '`' ){
+				sc.SetState( SCE_SS_OUTSTRING );
+			}
+			//Doc-Strings
+			else if( sc.ch == '\'' ){
+				sc.SetState( SCE_SS_DOCSTRING );
+			}
+			//utility comment
+			else
+			if( sc.ch ==  '/' && sc.chNext == '/' ){
+                sc.SetState( SCE_SS_UTILITYCOMMENT );
+                sc.Forward();
+			}
+			//actor block-comment
+			else
+			if( sc.ch == '/' && sc.chNext == '*' )
+			{
+                sc.SetState( SCE_SS_UTILITYBLOCKCOMMENT );
+                sc.Forward();                
+			} 
+			//scene block-comment
+			else
+			if( sc.ch ==  '/' && sc.chNext == '.' )
+			{
+                sc.SetState( SCE_SS_SCENEBLOCKCOMMENT );
+                sc.Forward();
+			}
+			//scene comment
+			else
+			if( sc.ch == '/' && sc.chNext == '>' )
+			{
+                sc.SetState( SCE_SS_SCENECOMMENT );
+                sc.Forward();
+			}
+			//character block-comment
+			else
+			if( sc.ch == '/' && sc.chNext == '\'' )
+			{
+                sc.SetState( SCE_SS_CHARBLOCKCOMMENT );
+                sc.Forward();
+			}
+			//character comment
+			else
+			if( sc.ch == '/' && sc.chNext == '\"' )
+			{
+				sc.SetState( SCE_SS_CHARCOMMENT );
+				sc.Forward();
+			}
+			else{
+                //sc.SetState( SCE_SS_DEFAULT );
+                styler.ColourTo( sc.currentPos, SCE_SS_DEFAULT );
+				NotAHeader = false;
+            }
+			
+            break;
+
+            
+		case SCE_SS_CHARCOMMENT:
+		case SCE_SS_SCENECOMMENT:
+		case SCE_SS_UTILITYCOMMENT:
+			if( sc.ch == '\n' || sc.ch == '\r' )
+			{
+                sc.SetState( SCE_SS_DEFAULT );
+			}
+			else continue;
+
+			break;
+		
+		case SCE_SS_UTILITYBLOCKCOMMENT:
+			if( sc.ch == '*' && sc.chNext == '/' )
+			{
+				sc.Forward();
+                styler.ColourTo( sc.currentPos, sc.state );
+                sc.ChangeState( SCE_SS_DEFAULT );
+			}
+			else continue;
+
+			break;
+			
+		case SCE_SS_SCENEBLOCKCOMMENT:
+			if( sc.ch == '.' && sc.chNext == '/' )
+			{
+				sc.Forward();
+                styler.ColourTo( sc.currentPos, sc.state );
+                sc.ChangeState( SCE_SS_DEFAULT );
+			}
+			else continue;
+
+			break;
+			
+		case SCE_SS_CHARBLOCKCOMMENT:
+			if( sc.ch == '\'' && sc.chNext == '/' )
+			{
+				sc.Forward();
+                styler.ColourTo( sc.currentPos, sc.state );
+                sc.ChangeState( SCE_SS_DEFAULT );
+			}
+			else continue;
+
+			break;
+			
+		case SCE_SS_STRING:
+			//For parsing " character inside strings, but its really dumb.
+			if( sc.ch == '\\' /*&& chNext == '\"'*/ ) 
+			{
+				sc.Forward();
+                continue;
+			}
+			else if( sc.ch == '\"' )
+			{
+				//The old fashioned way
+                styler.ColourTo( sc.currentPos, SCE_SS_STRING );
+                sc.ChangeState( SCE_SS_DEFAULT );
+            }
+            else continue;
+            
+            
+			break;
+
+		case SCE_SS_OUTSTRING:
+			if( sc.ch == '\\' )
+			{
+				sc.Forward();
+				continue;
+			}
+			else if( sc.ch == '`' )
+			{
+				styler.ColourTo( sc.currentPos, SCE_SS_OUTSTRING );
+				sc.ChangeState( SCE_SS_DEFAULT );
+			}
+			else continue;
+			
+		case SCE_SS_DOCSTRING:
+			if( sc.ch == '\\' )
+			{
+				sc.Forward();
+				continue;				
+			}
+			else if( sc.ch == '\'' )
+			{
+				styler.ColourTo( sc.currentPos, SCE_SS_DOCSTRING );
+				sc.ChangeState( SCE_SS_DEFAULT );				
+			}
+			else continue;
+		}
+
+
+	}
+    
+    sc.Complete();
+}
+
+static const char* const ssWordListDesc[] =
+{
+	"Blah",
+	0
+};
+
+
+LexerModule lmSS( SCLEX_SS, ColouriseSSDoc, "ss", 0, ssWordListDesc );
+
+
diff -urN scite167/scintilla/win32/makefile scite167_mod/scintilla/win32/makefile
--- scite167/scintilla/win32/makefile	2006-01-06 23:38:34.000000000 -0800
+++ scite167_mod/scintilla/win32/makefile	2006-01-06 23:12:20.000000000 -0800
@@ -51,14 +51,14 @@
 #++Autogenerated -- run src/LexGen.py to regenerate
 #**LEXOBJS=\\\n\(\*.o \)
 LEXOBJS=\
-LexAda.o LexAPDL.o LexAsm.o LexAsn1.o LexAU3.o LexAVE.o LexBaan.o LexBash.o \
-LexBasic.o LexBullant.o LexCaml.o LexCLW.o LexConf.o LexCPP.o LexCrontab.o \
-LexCsound.o LexCSS.o LexEiffel.o LexErlang.o LexEScript.o LexFlagship.o \
-LexForth.o LexFortran.o LexGui4Cli.o LexHaskell.o LexHTML.o LexKix.o LexLisp.o \
-LexLout.o LexLua.o LexMatlab.o LexMetapost.o LexMMIXAL.o LexMPT.o LexMSSQL.o \
-LexNsis.o LexOthers.o LexPascal.o LexPB.o LexPerl.o LexPOV.o LexPS.o \
-LexPython.o LexRebol.o LexRuby.o LexScriptol.o LexSmalltalk.o LexSpecman.o \
-LexSQL.o LexTADS3.o LexTeX.o LexVB.o LexVerilog.o LexVHDL.o LexYAML.o
+LexAVE.o LexLua.o LexEScript.o LexAU3.o LexTeX.o LexYAML.o LexCaml.o LexCPP.o \
+LexLout.o LexAsm.o LexBasic.o LexNsis.o LexVerilog.o LexTADS3.o LexKix.o \
+LexPerl.o LexCLW.o LexConf.o LexSmalltalk.o LexBash.o LexMatlab.o LexHaskell.o \
+LexAsn1.o LexAda.o LexForth.o LexMMIXAL.o LexOthers.o LexCSS.o LexCsound.o \
+LexGui4Cli.o LexBaan.o LexSQL.o LexMetapost.o LexPB.o LexScriptol.o LexVHDL.o \
+LexRebol.o LexFlagship.o LexRuby.o LexPascal.o LexPython.o LexEiffel.o \
+LexMPT.o LexSpecman.o LexLisp.o LexVB.o LexFortran.o LexPS.o LexBullant.o \
+LexCrontab.o LexHTML.o LexMSSQL.o LexErlang.o LexAPDL.o LexPOV.o LexSS.o
 #--Autogenerated -- end of automatically generated section
 
 SOBJS	= ScintillaWin.o ScintillaBase.o Editor.o Document.o \
diff -urN scite167/scintilla/win32/scintilla.mak scite167_mod/scintilla/win32/scintilla.mak
--- scite167/scintilla/win32/scintilla.mak	2006-01-06 23:38:34.000000000 -0800
+++ scite167_mod/scintilla/win32/scintilla.mak	2006-01-06 23:12:20.000000000 -0800
@@ -109,61 +109,62 @@
 #++Autogenerated -- run src/LexGen.py to regenerate
 #**LEXOBJS=\\\n\(\t$(DIR_O)\\\*.obj \\\n\)
 LEXOBJS=\
-	$(DIR_O)\LexAda.obj \
-	$(DIR_O)\LexAPDL.obj \
-	$(DIR_O)\LexAsm.obj \
-	$(DIR_O)\LexAsn1.obj \
-	$(DIR_O)\LexAU3.obj \
 	$(DIR_O)\LexAVE.obj \
-	$(DIR_O)\LexBaan.obj \
-	$(DIR_O)\LexBash.obj \
-	$(DIR_O)\LexBasic.obj \
-	$(DIR_O)\LexBullant.obj \
+	$(DIR_O)\LexLua.obj \
+	$(DIR_O)\LexEScript.obj \
+	$(DIR_O)\LexAU3.obj \
+	$(DIR_O)\LexTeX.obj \
+	$(DIR_O)\LexYAML.obj \
 	$(DIR_O)\LexCaml.obj \
-	$(DIR_O)\LexCLW.obj \
-	$(DIR_O)\LexConf.obj \
 	$(DIR_O)\LexCPP.obj \
-	$(DIR_O)\LexCrontab.obj \
-	$(DIR_O)\LexCsound.obj \
-	$(DIR_O)\LexCSS.obj \
-	$(DIR_O)\LexEiffel.obj \
-	$(DIR_O)\LexErlang.obj \
-	$(DIR_O)\LexEScript.obj \
-	$(DIR_O)\LexFlagship.obj \
-	$(DIR_O)\LexForth.obj \
-	$(DIR_O)\LexFortran.obj \
-	$(DIR_O)\LexGui4Cli.obj \
-	$(DIR_O)\LexHaskell.obj \
-	$(DIR_O)\LexHTML.obj \
-	$(DIR_O)\LexKix.obj \
-	$(DIR_O)\LexLisp.obj \
 	$(DIR_O)\LexLout.obj \
-	$(DIR_O)\LexLua.obj \
+	$(DIR_O)\LexAsm.obj \
+	$(DIR_O)\LexBasic.obj \
+	$(DIR_O)\LexNsis.obj \
+	$(DIR_O)\LexVerilog.obj \
+	$(DIR_O)\LexTADS3.obj \
+	$(DIR_O)\LexKix.obj \
+	$(DIR_O)\LexPerl.obj \
+	$(DIR_O)\LexCLW.obj \
+	$(DIR_O)\LexConf.obj \
+	$(DIR_O)\LexSmalltalk.obj \
+	$(DIR_O)\LexBash.obj \
 	$(DIR_O)\LexMatlab.obj \
-	$(DIR_O)\LexMetapost.obj \
+	$(DIR_O)\LexHaskell.obj \
+	$(DIR_O)\LexAsn1.obj \
+	$(DIR_O)\LexAda.obj \
+	$(DIR_O)\LexForth.obj \
 	$(DIR_O)\LexMMIXAL.obj \
-	$(DIR_O)\LexMPT.obj \
-	$(DIR_O)\LexMSSQL.obj \
-	$(DIR_O)\LexNsis.obj \
 	$(DIR_O)\LexOthers.obj \
-	$(DIR_O)\LexPascal.obj \
+	$(DIR_O)\LexCSS.obj \
+	$(DIR_O)\LexCsound.obj \
+	$(DIR_O)\LexGui4Cli.obj \
+	$(DIR_O)\LexBaan.obj \
+	$(DIR_O)\LexSQL.obj \
+	$(DIR_O)\LexMetapost.obj \
 	$(DIR_O)\LexPB.obj \
-	$(DIR_O)\LexPerl.obj \
-	$(DIR_O)\LexPOV.obj \
-	$(DIR_O)\LexPS.obj \
-	$(DIR_O)\LexPython.obj \
+	$(DIR_O)\LexScriptol.obj \
+	$(DIR_O)\LexVHDL.obj \
 	$(DIR_O)\LexRebol.obj \
+	$(DIR_O)\LexFlagship.obj \
 	$(DIR_O)\LexRuby.obj \
-	$(DIR_O)\LexScriptol.obj \
-	$(DIR_O)\LexSmalltalk.obj \
+	$(DIR_O)\LexPascal.obj \
+	$(DIR_O)\LexPython.obj \
+	$(DIR_O)\LexEiffel.obj \
+	$(DIR_O)\LexMPT.obj \
 	$(DIR_O)\LexSpecman.obj \
-	$(DIR_O)\LexSQL.obj \
-	$(DIR_O)\LexTADS3.obj \
-	$(DIR_O)\LexTeX.obj \
+	$(DIR_O)\LexLisp.obj \
 	$(DIR_O)\LexVB.obj \
-	$(DIR_O)\LexVerilog.obj \
-	$(DIR_O)\LexVHDL.obj \
-	$(DIR_O)\LexYAML.obj \
+	$(DIR_O)\LexFortran.obj \
+	$(DIR_O)\LexPS.obj \
+	$(DIR_O)\LexBullant.obj \
+	$(DIR_O)\LexCrontab.obj \
+	$(DIR_O)\LexHTML.obj \
+	$(DIR_O)\LexMSSQL.obj \
+	$(DIR_O)\LexErlang.obj \
+	$(DIR_O)\LexAPDL.obj \
+	$(DIR_O)\LexPOV.obj \
+	$(DIR_O)\LexSS.obj \
 
 #--Autogenerated -- end of automatically generated section
 
@@ -273,115 +274,117 @@
 #++Autogenerated -- run src/LexGen.py to regenerate
 #**\n\($(DIR_O)\\\*.obj: ..\\src\\\*.cxx $(LEX_HEADERS)\n\n\)
 
-$(DIR_O)\LexAda.obj: ..\src\LexAda.cxx $(LEX_HEADERS)
-
-$(DIR_O)\LexAPDL.obj: ..\src\LexAPDL.cxx $(LEX_HEADERS)
+$(DIR_O)\LexAVE.obj: ..\src\LexAVE.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexAsm.obj: ..\src\LexAsm.cxx $(LEX_HEADERS)
+$(DIR_O)\LexLua.obj: ..\src\LexLua.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexAsn1.obj: ..\src\LexAsn1.cxx $(LEX_HEADERS)
+$(DIR_O)\LexEScript.obj: ..\src\LexEScript.cxx $(LEX_HEADERS)
 
 $(DIR_O)\LexAU3.obj: ..\src\LexAU3.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexAVE.obj: ..\src\LexAVE.cxx $(LEX_HEADERS)
+$(DIR_O)\LexTeX.obj: ..\src\LexTeX.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexBaan.obj: ..\src\LexBaan.cxx $(LEX_HEADERS)
+$(DIR_O)\LexYAML.obj: ..\src\LexYAML.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexBash.obj: ..\src\LexBash.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCaml.obj: ..\src\LexCaml.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexBasic.obj: ..\src\LexBasic.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCPP.obj: ..\src\LexCPP.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexBullant.obj: ..\src\LexBullant.cxx $(LEX_HEADERS)
+$(DIR_O)\LexLout.obj: ..\src\LexLout.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCaml.obj: ..\src\LexCaml.cxx $(LEX_HEADERS)
+$(DIR_O)\LexAsm.obj: ..\src\LexAsm.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCLW.obj: ..\src\LexCLW.cxx $(LEX_HEADERS)
+$(DIR_O)\LexBasic.obj: ..\src\LexBasic.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexConf.obj: ..\src\LexConf.cxx $(LEX_HEADERS)
+$(DIR_O)\LexNsis.obj: ..\src\LexNsis.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCPP.obj: ..\src\LexCPP.cxx $(LEX_HEADERS)
+$(DIR_O)\LexVerilog.obj: ..\src\LexVerilog.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCrontab.obj: ..\src\LexCrontab.cxx $(LEX_HEADERS)
+$(DIR_O)\LexTADS3.obj: ..\src\LexTADS3.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCsound.obj: ..\src\LexCsound.cxx $(LEX_HEADERS)
+$(DIR_O)\LexKix.obj: ..\src\LexKix.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCSS.obj: ..\src\LexCSS.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPerl.obj: ..\src\LexPerl.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexEiffel.obj: ..\src\LexEiffel.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCLW.obj: ..\src\LexCLW.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexErlang.obj: ..\src\LexErlang.cxx $(LEX_HEADERS)
+$(DIR_O)\LexConf.obj: ..\src\LexConf.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexEScript.obj: ..\src\LexEScript.cxx $(LEX_HEADERS)
+$(DIR_O)\LexSmalltalk.obj: ..\src\LexSmalltalk.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexFlagship.obj: ..\src\LexFlagship.cxx $(LEX_HEADERS)
+$(DIR_O)\LexBash.obj: ..\src\LexBash.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexForth.obj: ..\src\LexForth.cxx $(LEX_HEADERS)
+$(DIR_O)\LexMatlab.obj: ..\src\LexMatlab.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexFortran.obj: ..\src\LexFortran.cxx $(LEX_HEADERS)
+$(DIR_O)\LexHaskell.obj: ..\src\LexHaskell.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexGui4Cli.obj: ..\src\LexGui4Cli.cxx $(LEX_HEADERS)
+$(DIR_O)\LexAsn1.obj: ..\src\LexAsn1.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexHaskell.obj: ..\src\LexHaskell.cxx $(LEX_HEADERS)
+$(DIR_O)\LexAda.obj: ..\src\LexAda.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexHTML.obj: ..\src\LexHTML.cxx $(LEX_HEADERS)
+$(DIR_O)\LexForth.obj: ..\src\LexForth.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexKix.obj: ..\src\LexKix.cxx $(LEX_HEADERS)
+$(DIR_O)\LexMMIXAL.obj: ..\src\LexMMIXAL.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexLisp.obj: ..\src\LexLisp.cxx $(LEX_HEADERS)
+$(DIR_O)\LexOthers.obj: ..\src\LexOthers.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexLout.obj: ..\src\LexLout.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCSS.obj: ..\src\LexCSS.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexLua.obj: ..\src\LexLua.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCsound.obj: ..\src\LexCsound.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexMatlab.obj: ..\src\LexMatlab.cxx $(LEX_HEADERS)
+$(DIR_O)\LexGui4Cli.obj: ..\src\LexGui4Cli.cxx $(LEX_HEADERS)
+
+$(DIR_O)\LexBaan.obj: ..\src\LexBaan.cxx $(LEX_HEADERS)
+
+$(DIR_O)\LexSQL.obj: ..\src\LexSQL.cxx $(LEX_HEADERS)
 
 $(DIR_O)\LexMetapost.obj: ..\src\LexMetapost.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexMMIXAL.obj: ..\src\LexMMIXAL.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPB.obj: ..\src\LexPB.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexMPT.obj: ..\src\LexMPT.cxx $(LEX_HEADERS)
+$(DIR_O)\LexScriptol.obj: ..\src\LexScriptol.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexMSSQL.obj: ..\src\LexMSSQL.cxx $(LEX_HEADERS)
+$(DIR_O)\LexVHDL.obj: ..\src\LexVHDL.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexNsis.obj: ..\src\LexNsis.cxx $(LEX_HEADERS)
+$(DIR_O)\LexRebol.obj: ..\src\LexRebol.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexOthers.obj: ..\src\LexOthers.cxx $(LEX_HEADERS)
+$(DIR_O)\LexFlagship.obj: ..\src\LexFlagship.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPascal.obj: ..\src\LexPascal.cxx $(LEX_HEADERS)
+$(DIR_O)\LexRuby.obj: ..\src\LexRuby.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPB.obj: ..\src\LexPB.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPascal.obj: ..\src\LexPascal.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPerl.obj: ..\src\LexPerl.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPython.obj: ..\src\LexPython.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPOV.obj: ..\src\LexPOV.cxx $(LEX_HEADERS)
+$(DIR_O)\LexEiffel.obj: ..\src\LexEiffel.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPS.obj: ..\src\LexPS.cxx $(LEX_HEADERS)
+$(DIR_O)\LexMPT.obj: ..\src\LexMPT.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPython.obj: ..\src\LexPython.cxx $(LEX_HEADERS)
+$(DIR_O)\LexSpecman.obj: ..\src\LexSpecman.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexRebol.obj: ..\src\LexRebol.cxx $(LEX_HEADERS)
+$(DIR_O)\LexLisp.obj: ..\src\LexLisp.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexRuby.obj: ..\src\LexRuby.cxx $(LEX_HEADERS)
+$(DIR_O)\LexVB.obj: ..\src\LexVB.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexScriptol.obj: ..\src\LexScriptol.cxx $(LEX_HEADERS)
+$(DIR_O)\LexFortran.obj: ..\src\LexFortran.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexSmalltalk.obj: ..\src\LexSmalltalk.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPS.obj: ..\src\LexPS.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexSpecman.obj: ..\src\LexSpecman.cxx $(LEX_HEADERS)
+$(DIR_O)\LexBullant.obj: ..\src\LexBullant.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexSQL.obj: ..\src\LexSQL.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCrontab.obj: ..\src\LexCrontab.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexTADS3.obj: ..\src\LexTADS3.cxx $(LEX_HEADERS)
+$(DIR_O)\LexHTML.obj: ..\src\LexHTML.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexTeX.obj: ..\src\LexTeX.cxx $(LEX_HEADERS)
+$(DIR_O)\LexMSSQL.obj: ..\src\LexMSSQL.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexVB.obj: ..\src\LexVB.cxx $(LEX_HEADERS)
+$(DIR_O)\LexErlang.obj: ..\src\LexErlang.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexVerilog.obj: ..\src\LexVerilog.cxx $(LEX_HEADERS)
+$(DIR_O)\LexAPDL.obj: ..\src\LexAPDL.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexVHDL.obj: ..\src\LexVHDL.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPOV.obj: ..\src\LexPOV.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexYAML.obj: ..\src\LexYAML.cxx $(LEX_HEADERS)
+$(DIR_O)\LexSS.obj: ..\src\LexSS.cxx $(LEX_HEADERS)
 
 
 #--Autogenerated -- end of automatically generated section
diff -urN scite167/scintilla/win32/scintilla_vc6.mak scite167_mod/scintilla/win32/scintilla_vc6.mak
--- scite167/scintilla/win32/scintilla_vc6.mak	2006-01-06 23:38:34.000000000 -0800
+++ scite167_mod/scintilla/win32/scintilla_vc6.mak	2006-01-06 23:12:20.000000000 -0800
@@ -111,61 +111,62 @@
 #++Autogenerated -- run src/LexGen.py to regenerate
 #**LEXOBJS=\\\n\(\t$(DIR_O)\\\*.obj \\\n\)
 LEXOBJS=\
-	$(DIR_O)\LexAda.obj \
-	$(DIR_O)\LexAPDL.obj \
-	$(DIR_O)\LexAsm.obj \
-	$(DIR_O)\LexAsn1.obj \
-	$(DIR_O)\LexAU3.obj \
 	$(DIR_O)\LexAVE.obj \
-	$(DIR_O)\LexBaan.obj \
-	$(DIR_O)\LexBash.obj \
-	$(DIR_O)\LexBasic.obj \
-	$(DIR_O)\LexBullant.obj \
+	$(DIR_O)\LexLua.obj \
+	$(DIR_O)\LexEScript.obj \
+	$(DIR_O)\LexAU3.obj \
+	$(DIR_O)\LexTeX.obj \
+	$(DIR_O)\LexYAML.obj \
 	$(DIR_O)\LexCaml.obj \
-	$(DIR_O)\LexCLW.obj \
-	$(DIR_O)\LexConf.obj \
 	$(DIR_O)\LexCPP.obj \
-	$(DIR_O)\LexCrontab.obj \
-	$(DIR_O)\LexCsound.obj \
-	$(DIR_O)\LexCSS.obj \
-	$(DIR_O)\LexEiffel.obj \
-	$(DIR_O)\LexErlang.obj \
-	$(DIR_O)\LexEScript.obj \
-	$(DIR_O)\LexFlagship.obj \
-	$(DIR_O)\LexForth.obj \
-	$(DIR_O)\LexFortran.obj \
-	$(DIR_O)\LexGui4Cli.obj \
-	$(DIR_O)\LexHaskell.obj \
-	$(DIR_O)\LexHTML.obj \
-	$(DIR_O)\LexKix.obj \
-	$(DIR_O)\LexLisp.obj \
 	$(DIR_O)\LexLout.obj \
-	$(DIR_O)\LexLua.obj \
+	$(DIR_O)\LexAsm.obj \
+	$(DIR_O)\LexBasic.obj \
+	$(DIR_O)\LexNsis.obj \
+	$(DIR_O)\LexVerilog.obj \
+	$(DIR_O)\LexTADS3.obj \
+	$(DIR_O)\LexKix.obj \
+	$(DIR_O)\LexPerl.obj \
+	$(DIR_O)\LexCLW.obj \
+	$(DIR_O)\LexConf.obj \
+	$(DIR_O)\LexSmalltalk.obj \
+	$(DIR_O)\LexBash.obj \
 	$(DIR_O)\LexMatlab.obj \
-	$(DIR_O)\LexMetapost.obj \
+	$(DIR_O)\LexHaskell.obj \
+	$(DIR_O)\LexAsn1.obj \
+	$(DIR_O)\LexAda.obj \
+	$(DIR_O)\LexForth.obj \
 	$(DIR_O)\LexMMIXAL.obj \
-	$(DIR_O)\LexMPT.obj \
-	$(DIR_O)\LexMSSQL.obj \
-	$(DIR_O)\LexNsis.obj \
 	$(DIR_O)\LexOthers.obj \
-	$(DIR_O)\LexPascal.obj \
+	$(DIR_O)\LexCSS.obj \
+	$(DIR_O)\LexCsound.obj \
+	$(DIR_O)\LexGui4Cli.obj \
+	$(DIR_O)\LexBaan.obj \
+	$(DIR_O)\LexSQL.obj \
+	$(DIR_O)\LexMetapost.obj \
 	$(DIR_O)\LexPB.obj \
-	$(DIR_O)\LexPerl.obj \
-	$(DIR_O)\LexPOV.obj \
-	$(DIR_O)\LexPS.obj \
-	$(DIR_O)\LexPython.obj \
+	$(DIR_O)\LexScriptol.obj \
+	$(DIR_O)\LexVHDL.obj \
 	$(DIR_O)\LexRebol.obj \
+	$(DIR_O)\LexFlagship.obj \
 	$(DIR_O)\LexRuby.obj \
-	$(DIR_O)\LexScriptol.obj \
-	$(DIR_O)\LexSmalltalk.obj \
+	$(DIR_O)\LexPascal.obj \
+	$(DIR_O)\LexPython.obj \
+	$(DIR_O)\LexEiffel.obj \
+	$(DIR_O)\LexMPT.obj \
 	$(DIR_O)\LexSpecman.obj \
-	$(DIR_O)\LexSQL.obj \
-	$(DIR_O)\LexTADS3.obj \
-	$(DIR_O)\LexTeX.obj \
+	$(DIR_O)\LexLisp.obj \
 	$(DIR_O)\LexVB.obj \
-	$(DIR_O)\LexVerilog.obj \
-	$(DIR_O)\LexVHDL.obj \
-	$(DIR_O)\LexYAML.obj \
+	$(DIR_O)\LexFortran.obj \
+	$(DIR_O)\LexPS.obj \
+	$(DIR_O)\LexBullant.obj \
+	$(DIR_O)\LexCrontab.obj \
+	$(DIR_O)\LexHTML.obj \
+	$(DIR_O)\LexMSSQL.obj \
+	$(DIR_O)\LexErlang.obj \
+	$(DIR_O)\LexAPDL.obj \
+	$(DIR_O)\LexPOV.obj \
+	$(DIR_O)\LexSS.obj \
 
 #--Autogenerated -- end of automatically generated section
 
@@ -275,115 +276,117 @@
 #++Autogenerated -- run src/LexGen.py to regenerate
 #**\n\($(DIR_O)\\\*.obj: ..\\src\\\*.cxx $(LEX_HEADERS)\n\n\)
 
-$(DIR_O)\LexAda.obj: ..\src\LexAda.cxx $(LEX_HEADERS)
-
-$(DIR_O)\LexAPDL.obj: ..\src\LexAPDL.cxx $(LEX_HEADERS)
+$(DIR_O)\LexAVE.obj: ..\src\LexAVE.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexAsm.obj: ..\src\LexAsm.cxx $(LEX_HEADERS)
+$(DIR_O)\LexLua.obj: ..\src\LexLua.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexAsn1.obj: ..\src\LexAsn1.cxx $(LEX_HEADERS)
+$(DIR_O)\LexEScript.obj: ..\src\LexEScript.cxx $(LEX_HEADERS)
 
 $(DIR_O)\LexAU3.obj: ..\src\LexAU3.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexAVE.obj: ..\src\LexAVE.cxx $(LEX_HEADERS)
+$(DIR_O)\LexTeX.obj: ..\src\LexTeX.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexBaan.obj: ..\src\LexBaan.cxx $(LEX_HEADERS)
+$(DIR_O)\LexYAML.obj: ..\src\LexYAML.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexBash.obj: ..\src\LexBash.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCaml.obj: ..\src\LexCaml.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexBasic.obj: ..\src\LexBasic.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCPP.obj: ..\src\LexCPP.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexBullant.obj: ..\src\LexBullant.cxx $(LEX_HEADERS)
+$(DIR_O)\LexLout.obj: ..\src\LexLout.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCaml.obj: ..\src\LexCaml.cxx $(LEX_HEADERS)
+$(DIR_O)\LexAsm.obj: ..\src\LexAsm.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCLW.obj: ..\src\LexCLW.cxx $(LEX_HEADERS)
+$(DIR_O)\LexBasic.obj: ..\src\LexBasic.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexConf.obj: ..\src\LexConf.cxx $(LEX_HEADERS)
+$(DIR_O)\LexNsis.obj: ..\src\LexNsis.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCPP.obj: ..\src\LexCPP.cxx $(LEX_HEADERS)
+$(DIR_O)\LexVerilog.obj: ..\src\LexVerilog.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCrontab.obj: ..\src\LexCrontab.cxx $(LEX_HEADERS)
+$(DIR_O)\LexTADS3.obj: ..\src\LexTADS3.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCsound.obj: ..\src\LexCsound.cxx $(LEX_HEADERS)
+$(DIR_O)\LexKix.obj: ..\src\LexKix.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexCSS.obj: ..\src\LexCSS.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPerl.obj: ..\src\LexPerl.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexEiffel.obj: ..\src\LexEiffel.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCLW.obj: ..\src\LexCLW.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexErlang.obj: ..\src\LexErlang.cxx $(LEX_HEADERS)
+$(DIR_O)\LexConf.obj: ..\src\LexConf.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexEScript.obj: ..\src\LexEScript.cxx $(LEX_HEADERS)
+$(DIR_O)\LexSmalltalk.obj: ..\src\LexSmalltalk.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexFlagship.obj: ..\src\LexFlagship.cxx $(LEX_HEADERS)
+$(DIR_O)\LexBash.obj: ..\src\LexBash.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexForth.obj: ..\src\LexForth.cxx $(LEX_HEADERS)
+$(DIR_O)\LexMatlab.obj: ..\src\LexMatlab.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexFortran.obj: ..\src\LexFortran.cxx $(LEX_HEADERS)
+$(DIR_O)\LexHaskell.obj: ..\src\LexHaskell.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexGui4Cli.obj: ..\src\LexGui4Cli.cxx $(LEX_HEADERS)
+$(DIR_O)\LexAsn1.obj: ..\src\LexAsn1.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexHaskell.obj: ..\src\LexHaskell.cxx $(LEX_HEADERS)
+$(DIR_O)\LexAda.obj: ..\src\LexAda.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexHTML.obj: ..\src\LexHTML.cxx $(LEX_HEADERS)
+$(DIR_O)\LexForth.obj: ..\src\LexForth.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexKix.obj: ..\src\LexKix.cxx $(LEX_HEADERS)
+$(DIR_O)\LexMMIXAL.obj: ..\src\LexMMIXAL.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexLisp.obj: ..\src\LexLisp.cxx $(LEX_HEADERS)
+$(DIR_O)\LexOthers.obj: ..\src\LexOthers.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexLout.obj: ..\src\LexLout.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCSS.obj: ..\src\LexCSS.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexLua.obj: ..\src\LexLua.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCsound.obj: ..\src\LexCsound.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexMatlab.obj: ..\src\LexMatlab.cxx $(LEX_HEADERS)
+$(DIR_O)\LexGui4Cli.obj: ..\src\LexGui4Cli.cxx $(LEX_HEADERS)
+
+$(DIR_O)\LexBaan.obj: ..\src\LexBaan.cxx $(LEX_HEADERS)
+
+$(DIR_O)\LexSQL.obj: ..\src\LexSQL.cxx $(LEX_HEADERS)
 
 $(DIR_O)\LexMetapost.obj: ..\src\LexMetapost.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexMMIXAL.obj: ..\src\LexMMIXAL.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPB.obj: ..\src\LexPB.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexMPT.obj: ..\src\LexMPT.cxx $(LEX_HEADERS)
+$(DIR_O)\LexScriptol.obj: ..\src\LexScriptol.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexMSSQL.obj: ..\src\LexMSSQL.cxx $(LEX_HEADERS)
+$(DIR_O)\LexVHDL.obj: ..\src\LexVHDL.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexNsis.obj: ..\src\LexNsis.cxx $(LEX_HEADERS)
+$(DIR_O)\LexRebol.obj: ..\src\LexRebol.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexOthers.obj: ..\src\LexOthers.cxx $(LEX_HEADERS)
+$(DIR_O)\LexFlagship.obj: ..\src\LexFlagship.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPascal.obj: ..\src\LexPascal.cxx $(LEX_HEADERS)
+$(DIR_O)\LexRuby.obj: ..\src\LexRuby.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPB.obj: ..\src\LexPB.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPascal.obj: ..\src\LexPascal.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPerl.obj: ..\src\LexPerl.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPython.obj: ..\src\LexPython.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPOV.obj: ..\src\LexPOV.cxx $(LEX_HEADERS)
+$(DIR_O)\LexEiffel.obj: ..\src\LexEiffel.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPS.obj: ..\src\LexPS.cxx $(LEX_HEADERS)
+$(DIR_O)\LexMPT.obj: ..\src\LexMPT.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexPython.obj: ..\src\LexPython.cxx $(LEX_HEADERS)
+$(DIR_O)\LexSpecman.obj: ..\src\LexSpecman.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexRebol.obj: ..\src\LexRebol.cxx $(LEX_HEADERS)
+$(DIR_O)\LexLisp.obj: ..\src\LexLisp.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexRuby.obj: ..\src\LexRuby.cxx $(LEX_HEADERS)
+$(DIR_O)\LexVB.obj: ..\src\LexVB.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexScriptol.obj: ..\src\LexScriptol.cxx $(LEX_HEADERS)
+$(DIR_O)\LexFortran.obj: ..\src\LexFortran.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexSmalltalk.obj: ..\src\LexSmalltalk.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPS.obj: ..\src\LexPS.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexSpecman.obj: ..\src\LexSpecman.cxx $(LEX_HEADERS)
+$(DIR_O)\LexBullant.obj: ..\src\LexBullant.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexSQL.obj: ..\src\LexSQL.cxx $(LEX_HEADERS)
+$(DIR_O)\LexCrontab.obj: ..\src\LexCrontab.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexTADS3.obj: ..\src\LexTADS3.cxx $(LEX_HEADERS)
+$(DIR_O)\LexHTML.obj: ..\src\LexHTML.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexTeX.obj: ..\src\LexTeX.cxx $(LEX_HEADERS)
+$(DIR_O)\LexMSSQL.obj: ..\src\LexMSSQL.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexVB.obj: ..\src\LexVB.cxx $(LEX_HEADERS)
+$(DIR_O)\LexErlang.obj: ..\src\LexErlang.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexVerilog.obj: ..\src\LexVerilog.cxx $(LEX_HEADERS)
+$(DIR_O)\LexAPDL.obj: ..\src\LexAPDL.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexVHDL.obj: ..\src\LexVHDL.cxx $(LEX_HEADERS)
+$(DIR_O)\LexPOV.obj: ..\src\LexPOV.cxx $(LEX_HEADERS)
 
-$(DIR_O)\LexYAML.obj: ..\src\LexYAML.cxx $(LEX_HEADERS)
+$(DIR_O)\LexSS.obj: ..\src\LexSS.cxx $(LEX_HEADERS)
 
 
 #--Autogenerated -- end of automatically generated section
diff -urN scite167/scite/boundscheck/SciTE.vcproj scite167_mod/scite/boundscheck/SciTE.vcproj
--- scite167/scite/boundscheck/SciTE.vcproj	2006-01-06 23:38:34.000000000 -0800
+++ scite167_mod/scite/boundscheck/SciTE.vcproj	2006-01-06 23:12:20.000000000 -0800
@@ -223,169 +223,172 @@
 				RelativePath="..\lua\src\ldump.c">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexAda.cxx">
+				RelativePath="..\..\scintilla\src\LexAVE.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexAPDL.cxx">
+				RelativePath="..\..\scintilla\src\LexLua.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexAsm.cxx">
+				RelativePath="..\..\scintilla\src\LexEScript.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexAsn1.cxx">
+				RelativePath="..\..\scintilla\src\LexAU3.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexAU3.cxx">
+				RelativePath="..\..\scintilla\src\LexTeX.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexAVE.cxx">
+				RelativePath="..\..\scintilla\src\LexYAML.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexBaan.cxx">
+				RelativePath="..\..\scintilla\src\LexCaml.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexBash.cxx">
+				RelativePath="..\..\scintilla\src\LexCPP.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexBasic.cxx">
+				RelativePath="..\..\scintilla\src\LexLout.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexBullant.cxx">
+				RelativePath="..\..\scintilla\src\LexAsm.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexCaml.cxx">
+				RelativePath="..\..\scintilla\src\LexBasic.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexCLW.cxx">
+				RelativePath="..\..\scintilla\src\LexNsis.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexConf.cxx">
+				RelativePath="..\..\scintilla\src\LexVerilog.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexCPP.cxx">
+				RelativePath="..\..\scintilla\src\LexTADS3.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexCrontab.cxx">
+				RelativePath="..\..\scintilla\src\LexKix.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexCsound.cxx">
+				RelativePath="..\..\scintilla\src\LexPerl.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexCSS.cxx">
+				RelativePath="..\..\scintilla\src\LexCLW.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexEiffel.cxx">
+				RelativePath="..\..\scintilla\src\LexConf.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexErlang.cxx">
+				RelativePath="..\..\scintilla\src\LexSmalltalk.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexEScript.cxx">
+				RelativePath="..\..\scintilla\src\LexBash.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexFlagship.cxx">
+				RelativePath="..\..\scintilla\src\LexMatlab.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexForth.cxx">
+				RelativePath="..\..\scintilla\src\LexHaskell.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexFortran.cxx">
+				RelativePath="..\..\scintilla\src\LexAsn1.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexGui4Cli.cxx">
+				RelativePath="..\..\scintilla\src\LexAda.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexHaskell.cxx">
+				RelativePath="..\..\scintilla\src\LexForth.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexHTML.cxx">
+				RelativePath="..\..\scintilla\src\LexMMIXAL.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexKix.cxx">
+				RelativePath="..\..\scintilla\src\LexOthers.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexLisp.cxx">
+				RelativePath="..\..\scintilla\src\LexCSS.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexLout.cxx">
+				RelativePath="..\..\scintilla\src\LexCsound.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexLua.cxx">
+				RelativePath="..\..\scintilla\src\LexGui4Cli.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexMatlab.cxx">
+				RelativePath="..\..\scintilla\src\LexBaan.cxx">
+			</File>
+			<File
+				RelativePath="..\..\scintilla\src\LexSQL.cxx">
 			</File>
 			<File
 				RelativePath="..\..\scintilla\src\LexMetapost.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexMMIXAL.cxx">
+				RelativePath="..\..\scintilla\src\LexPB.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexMPT.cxx">
+				RelativePath="..\..\scintilla\src\LexScriptol.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexMSSQL.cxx">
+				RelativePath="..\..\scintilla\src\LexVHDL.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexNsis.cxx">
+				RelativePath="..\..\scintilla\src\LexRebol.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexOthers.cxx">
+				RelativePath="..\..\scintilla\src\LexFlagship.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexPascal.cxx">
+				RelativePath="..\..\scintilla\src\LexRuby.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexPB.cxx">
+				RelativePath="..\..\scintilla\src\LexPascal.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexPerl.cxx">
+				RelativePath="..\..\scintilla\src\LexPython.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexPOV.cxx">
+				RelativePath="..\..\scintilla\src\LexEiffel.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexPS.cxx">
+				RelativePath="..\..\scintilla\src\LexMPT.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexPython.cxx">
+				RelativePath="..\..\scintilla\src\LexSpecman.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexRebol.cxx">
+				RelativePath="..\..\scintilla\src\LexLisp.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexRuby.cxx">
+				RelativePath="..\..\scintilla\src\LexVB.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexScriptol.cxx">
+				RelativePath="..\..\scintilla\src\LexFortran.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexSmalltalk.cxx">
+				RelativePath="..\..\scintilla\src\LexPS.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexSpecman.cxx">
+				RelativePath="..\..\scintilla\src\LexBullant.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexSQL.cxx">
+				RelativePath="..\..\scintilla\src\LexCrontab.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexTADS3.cxx">
+				RelativePath="..\..\scintilla\src\LexHTML.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexTeX.cxx">
+				RelativePath="..\..\scintilla\src\LexMSSQL.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexVB.cxx">
+				RelativePath="..\..\scintilla\src\LexErlang.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexVerilog.cxx">
+				RelativePath="..\..\scintilla\src\LexAPDL.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexVHDL.cxx">
+				RelativePath="..\..\scintilla\src\LexPOV.cxx">
 			</File>
 			<File
-				RelativePath="..\..\scintilla\src\LexYAML.cxx">
+				RelativePath="..\..\scintilla\src\LexSS.cxx">
 			</File>
 
 			<File
diff -urN scite167/scite/src/SciTEGlobal.properties scite167_mod/scite/src/SciTEGlobal.properties
--- scite167/scite/src/SciTEGlobal.properties	2006-01-06 23:38:34.000000000 -0800
+++ scite167_mod/scite/src/SciTEGlobal.properties	2006-01-06 23:21:56.000000000 -0800
@@ -295,6 +295,7 @@
 $(filter.ruby)\
 $(filter.sql)\
 $(filter.specman)\
+$(filter.ss)\
 $(filter.tcl)\
 $(filter.tex)\
 $(filter.text)\
@@ -460,6 +461,7 @@
 #Reso&urce|rc||\
 Ruby|rb||\
 Shell|sh||\
+StoryScript|ssconv||\
 S&QL|sql||\
 #Specman|e||\
 &TCL|tcl||\
@@ -524,6 +526,7 @@
 #import smalltalk
 import sql
 #import specman
+import ss
 import tcl
 import tex
 import vb
diff -urN scite167/scite/src/ss.properties scite167_mod/scite/src/ss.properties
--- scite167/scite/src/ss.properties	1969-12-31 16:00:00.000000000 -0800
+++ scite167_mod/scite/src/ss.properties	2006-01-06 17:42:33.000000000 -0800
@@ -0,0 +1,75 @@
+#Properties file for Daniel Jones' SS Language
+
+
+#What type of file SciTE recognizes as SS
+file.patterns.ss=*.ssconv
+
+#How the filter should show up in the Open dialouge
+filter.ss=S^2 (ssconv)|$(file.patterns.ss)|
+
+#Don't mess with this
+lexer.$(file.patterns.ss)=ss
+
+#These are obviously all the keywords and special variables
+#defined by the language
+keywords.$(file.patterns.ss)=\
+use unuse and or not \
+out next end doc \
+var list character \
+SSCommon print _INF_ _NEGINFO_ _NAN_ \
+SSMath sqrt abs mean sin cos tan asin acos atan max min int floor pi e \
+SSTime time elapsed_seconds timezone date \
+SSList remove removeall push pop sort reverse pickone
+
+#Control keywords
+keywords2.$(file.patterns.ss)=\
+if while do then else
+
+#This is a bit of hack for fonts to work correctly
+#The '!' before a font is required on linux for
+#anti-aliased fonts.  But if its used on windows,
+#it won't be able to find the font.  Hence...
+if PLAT_WIN
+    FontPrefix=
+if PLAT_GTK
+    FontPrefix=!
+
+
+#Feel free to change any of these fonts
+#They are just my personaly preference and many may not even
+#have some of them (like Anonymous).
+
+
+
+
+#Default
+style.ss.0=fore:#000000
+#String
+style.ss.1=font:$(FontPrefix)Courier New,fore:#800000,back:#F0F0F0,bold,size:12
+#Number
+style.ss.2=fore:#800000
+#Keyword
+style.ss.3=fore:#000080
+#Control words
+style.ss.4=fore:#000080,bold
+#Character Comment (line)
+#style.ss.5=font:$(FontPrefix)Andale Mono,fore:#804000,back:#F0F0F0,italics,eolfilled
+#Utility Comment (line)
+style.ss.6=font:$(FontPrefix)Andale Mono,fore:#808080,back:#F0F0F0,italics,eolfilled
+#Scene Comment (line)
+style.ss.7=font:$(FontPrefix)Andale Mono,fore:#804000,back:#F0F0F0,italics,eolfilled
+#Character Comment (block)
+#style.ss.8=font:$(FontPrefix)Andale Mono,fore:#804000,back:#F0F0F0,italics,eolfilled
+#Scene Comment (block)
+style.ss.9=font:$(FontPrefix)Andale Mono,fore:#804000,back:#F0F0F0,italics,eolfilled
+#Utility Comment (block)
+style.ss.10=font:$(FontPrefix)Andale Mono,fore:#808080,back:#F0F0F0,italics,eolfilled
+#Block Headers
+style.ss.11=font:$(FontPrefix)Courier New,back:#F0F0F0,size:12,bold,eolfilled
+#Out-Strings
+style.ss.12=font:$(FontPrefix)Courier New,fore:#800000,back:#F0F0F0,bold,size:12,eolfilled
+#Doc-Strings
+style.ss.13=font:$(FontPrefix)Courier New,fore:#408000,back:#F0F0F0,italics,size:12,eolfilled
+
+#You need the -p to disable curses.  It won't work otherwise.
+command.go.$(file.patterns.ss)=storyscript $(FileNameExt)
diff -urN scite167/scite/win32/makefile scite167_mod/scite/win32/makefile
--- scite167/scite/win32/makefile	2006-01-06 23:38:34.000000000 -0800
+++ scite167_mod/scite/win32/makefile	2006-01-06 23:13:55.000000000 -0800
@@ -103,8 +103,9 @@
 ..\bin\ps.properties ..\bin\purebasic.properties ..\bin\python.properties \
 ..\bin\rebol.properties ..\bin\ruby.properties ..\bin\scriptol.properties \
 ..\bin\smalltalk.properties ..\bin\specman.properties ..\bin\sql.properties \
-..\bin\tcl.properties ..\bin\tex.properties ..\bin\vb.properties \
-..\bin\verilog.properties ..\bin\vhdl.properties ..\bin\yaml.properties
+..\bin\ss.properties ..\bin\tcl.properties ..\bin\tex.properties \
+..\bin\vb.properties ..\bin\verilog.properties ..\bin\vhdl.properties \
+..\bin\yaml.properties
 #--Autogenerated -- end of automatically generated section
 
 PROPS=..\bin\SciTEGlobal.properties ..\bin\abbrev.properties $(LEXPROPS)
@@ -220,6 +221,8 @@
 	$(COPY) $^ $@
 ..\bin\sql.properties:	..\src\sql.properties
 	$(COPY) $^ $@
+..\bin\ss.properties:	..\src\ss.properties
+	$(COPY) $^ $@
 ..\bin\tcl.properties:	..\src\tcl.properties
 	$(COPY) $^ $@
 ..\bin\tex.properties:	..\src\tex.properties
diff -urN scite167/scite/win32/scite.mak scite167_mod/scite/win32/scite.mak
--- scite167/scite/win32/scite.mak	2006-01-06 23:38:34.000000000 -0800
+++ scite167_mod/scite/win32/scite.mak	2006-01-06 23:13:55.000000000 -0800
@@ -110,61 +110,62 @@
 #++Autogenerated -- run src/LexGen.py to regenerate
 #**LEXOBJS=\\\n\(\t..\\..\\scintilla\\win32\\\*.obj \\\n\)
 LEXOBJS=\
-	..\..\scintilla\win32\LexAda.obj \
-	..\..\scintilla\win32\LexAPDL.obj \
-	..\..\scintilla\win32\LexAsm.obj \
-	..\..\scintilla\win32\LexAsn1.obj \
-	..\..\scintilla\win32\LexAU3.obj \
 	..\..\scintilla\win32\LexAVE.obj \
-	..\..\scintilla\win32\LexBaan.obj \
-	..\..\scintilla\win32\LexBash.obj \
-	..\..\scintilla\win32\LexBasic.obj \
-	..\..\scintilla\win32\LexBullant.obj \
+	..\..\scintilla\win32\LexLua.obj \
+	..\..\scintilla\win32\LexEScript.obj \
+	..\..\scintilla\win32\LexAU3.obj \
+	..\..\scintilla\win32\LexTeX.obj \
+	..\..\scintilla\win32\LexYAML.obj \
 	..\..\scintilla\win32\LexCaml.obj \
-	..\..\scintilla\win32\LexCLW.obj \
-	..\..\scintilla\win32\LexConf.obj \
 	..\..\scintilla\win32\LexCPP.obj \
-	..\..\scintilla\win32\LexCrontab.obj \
-	..\..\scintilla\win32\LexCsound.obj \
-	..\..\scintilla\win32\LexCSS.obj \
-	..\..\scintilla\win32\LexEiffel.obj \
-	..\..\scintilla\win32\LexErlang.obj \
-	..\..\scintilla\win32\LexEScript.obj \
-	..\..\scintilla\win32\LexFlagship.obj \
-	..\..\scintilla\win32\LexForth.obj \
-	..\..\scintilla\win32\LexFortran.obj \
-	..\..\scintilla\win32\LexGui4Cli.obj \
-	..\..\scintilla\win32\LexHaskell.obj \
-	..\..\scintilla\win32\LexHTML.obj \
-	..\..\scintilla\win32\LexKix.obj \
-	..\..\scintilla\win32\LexLisp.obj \
 	..\..\scintilla\win32\LexLout.obj \
-	..\..\scintilla\win32\LexLua.obj \
+	..\..\scintilla\win32\LexAsm.obj \
+	..\..\scintilla\win32\LexBasic.obj \
+	..\..\scintilla\win32\LexNsis.obj \
+	..\..\scintilla\win32\LexVerilog.obj \
+	..\..\scintilla\win32\LexTADS3.obj \
+	..\..\scintilla\win32\LexKix.obj \
+	..\..\scintilla\win32\LexPerl.obj \
+	..\..\scintilla\win32\LexCLW.obj \
+	..\..\scintilla\win32\LexConf.obj \
+	..\..\scintilla\win32\LexSmalltalk.obj \
+	..\..\scintilla\win32\LexBash.obj \
 	..\..\scintilla\win32\LexMatlab.obj \
-	..\..\scintilla\win32\LexMetapost.obj \
+	..\..\scintilla\win32\LexHaskell.obj \
+	..\..\scintilla\win32\LexAsn1.obj \
+	..\..\scintilla\win32\LexAda.obj \
+	..\..\scintilla\win32\LexForth.obj \
 	..\..\scintilla\win32\LexMMIXAL.obj \
-	..\..\scintilla\win32\LexMPT.obj \
-	..\..\scintilla\win32\LexMSSQL.obj \
-	..\..\scintilla\win32\LexNsis.obj \
 	..\..\scintilla\win32\LexOthers.obj \
-	..\..\scintilla\win32\LexPascal.obj \
+	..\..\scintilla\win32\LexCSS.obj \
+	..\..\scintilla\win32\LexCsound.obj \
+	..\..\scintilla\win32\LexGui4Cli.obj \
+	..\..\scintilla\win32\LexBaan.obj \
+	..\..\scintilla\win32\LexSQL.obj \
+	..\..\scintilla\win32\LexMetapost.obj \
 	..\..\scintilla\win32\LexPB.obj \
-	..\..\scintilla\win32\LexPerl.obj \
-	..\..\scintilla\win32\LexPOV.obj \
-	..\..\scintilla\win32\LexPS.obj \
-	..\..\scintilla\win32\LexPython.obj \
+	..\..\scintilla\win32\LexScriptol.obj \
+	..\..\scintilla\win32\LexVHDL.obj \
 	..\..\scintilla\win32\LexRebol.obj \
+	..\..\scintilla\win32\LexFlagship.obj \
 	..\..\scintilla\win32\LexRuby.obj \
-	..\..\scintilla\win32\LexScriptol.obj \
-	..\..\scintilla\win32\LexSmalltalk.obj \
+	..\..\scintilla\win32\LexPascal.obj \
+	..\..\scintilla\win32\LexPython.obj \
+	..\..\scintilla\win32\LexEiffel.obj \
+	..\..\scintilla\win32\LexMPT.obj \
 	..\..\scintilla\win32\LexSpecman.obj \
-	..\..\scintilla\win32\LexSQL.obj \
-	..\..\scintilla\win32\LexTADS3.obj \
-	..\..\scintilla\win32\LexTeX.obj \
+	..\..\scintilla\win32\LexLisp.obj \
 	..\..\scintilla\win32\LexVB.obj \
-	..\..\scintilla\win32\LexVerilog.obj \
-	..\..\scintilla\win32\LexVHDL.obj \
-	..\..\scintilla\win32\LexYAML.obj \
+	..\..\scintilla\win32\LexFortran.obj \
+	..\..\scintilla\win32\LexPS.obj \
+	..\..\scintilla\win32\LexBullant.obj \
+	..\..\scintilla\win32\LexCrontab.obj \
+	..\..\scintilla\win32\LexHTML.obj \
+	..\..\scintilla\win32\LexMSSQL.obj \
+	..\..\scintilla\win32\LexErlang.obj \
+	..\..\scintilla\win32\LexAPDL.obj \
+	..\..\scintilla\win32\LexPOV.obj \
+	..\..\scintilla\win32\LexSS.obj \
 
 #--Autogenerated -- end of automatically generated section
 
@@ -230,9 +231,9 @@
 $(DIR_BIN)\rebol.properties $(DIR_BIN)\ruby.properties \
 $(DIR_BIN)\scriptol.properties $(DIR_BIN)\smalltalk.properties \
 $(DIR_BIN)\specman.properties $(DIR_BIN)\sql.properties \
-$(DIR_BIN)\tcl.properties $(DIR_BIN)\tex.properties $(DIR_BIN)\vb.properties \
-$(DIR_BIN)\verilog.properties $(DIR_BIN)\vhdl.properties \
-$(DIR_BIN)\yaml.properties
+$(DIR_BIN)\ss.properties $(DIR_BIN)\tcl.properties $(DIR_BIN)\tex.properties \
+$(DIR_BIN)\vb.properties $(DIR_BIN)\verilog.properties \
+$(DIR_BIN)\vhdl.properties $(DIR_BIN)\yaml.properties
 #--Autogenerated -- end of automatically generated section
 
 PROPS=$(DIR_BIN)\SciTEGlobal.properties $(DIR_BIN)\abbrev.properties $(LEXPROPS)
@@ -367,6 +368,8 @@
 	copy ..\src\specman.properties $@
 $(DIR_BIN)\sql.properties:	..\src\sql.properties
 	copy ..\src\sql.properties $@
+$(DIR_BIN)\ss.properties:	..\src\ss.properties
+	copy ..\src\ss.properties $@
 $(DIR_BIN)\tcl.properties:	..\src\tcl.properties
 	copy ..\src\tcl.properties $@
 $(DIR_BIN)\tex.properties:	..\src\tex.properties
